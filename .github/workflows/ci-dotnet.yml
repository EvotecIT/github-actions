name: Evotec .NET CI

on:
  workflow_call:
    inputs:
      solution:
        description: "Path to .sln (or directory to search)"
        required: false
        default: "**/*.sln"
        type: string
      build_configuration:
        description: "Build configuration"
        required: false
        default: "Debug"
        type: string
      dotnet_versions:
        description: 'JSON array of SDK versions (e.g. ["8.0.x"])'
        required: false
        default: '["8.0.x"]'
        type: string
      frameworks:
        description: 'JSON array of target frameworks to test (empty = all)'
        required: false
        default: '[]'
        type: string
      os:
        description: 'JSON array of runs-on labels (e.g. ["windows-latest"], or ["self-hosted","windows"])'
        required: false
        default: '["windows-latest"]'
        type: string
      test_verbosity:
        description: 'minimal | normal | detailed'
        required: false
        default: 'minimal'
        type: string
      summarize_failures:
        description: 'Show only failing tests summary when job fails'
        required: false
        default: true
        type: boolean
      enable_codecov:
        description: 'Upload coverage to Codecov'
        required: false
        default: false
        type: boolean
      codecov_token:
        description: 'Codecov token (if tokenless upload not enabled)'
        required: false
        type: string
      restore_build_first:
        description: 'Run restore/build before tests'
        required: false
        default: true
        type: boolean
      auto_detect_sdks:
        description: 'Automatically detect SDKs from global.json and TFMs'
        required: false
        default: true
        type: boolean
      auto_detect_frameworks:
        description: 'Automatically detect TFMs from *.Tests.csproj when frameworks is empty'
        required: false
        default: true
        type: boolean
    secrets:
      CODECOV_TOKEN:
        required: false

jobs:
  test:
    name: dotnet (SDK ${{ matrix.sdk }})
    runs-on: ${{ fromJSON(inputs.os) }}
    strategy:
      fail-fast: false
      matrix:
        sdk: ${{ fromJSON(inputs.dotnet_versions) }}
      max-parallel: 8

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show matrix inputs
        shell: pwsh
        run: |
          Write-Host "SDK: ${{ matrix.sdk }}"
          Write-Host "Frameworks JSON (input): '${{ inputs.frameworks }}'"
          "SDK: ${{ matrix.sdk }}`nFrameworks JSON (input): '${{ inputs.frameworks }}'" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8

      - name: Run .NET tests
        id: run
        uses: evotecit/github-actions/.github/actions/dotnet-run-tests@master
        with:
          solution: ${{ inputs.solution }}
          sdk: ${{ matrix.sdk }}
          build_configuration: ${{ inputs.build_configuration }}
          test_verbosity: ${{ inputs.test_verbosity }}
          frameworks: ${{ inputs.frameworks }}
          restore_build_first: ${{ inputs.restore_build_first }}
          enable_coverage: true
        timeout-minutes: 30

      - name: Summarize failing tests
        if: failure() && inputs.summarize_failures
        uses: evotecit/github-actions/.github/actions/dotnet-test-summary@master

      - name: Upload TRX
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trx-${{ runner.os }}-${{ matrix.sdk }}
          path: artifacts/TestResults/**/*.trx

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ runner.os }}-${{ matrix.sdk }}
          path: **/coverage.cobertura.xml

      - name: Upload to Codecov
        # Only attempt upload when coverage files exist; token is picked from input or env if provided
        if: inputs.enable_codecov && hashFiles('**/coverage.cobertura.xml') != ''
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: '**/coverage.cobertura.xml'
          token: ${{ inputs.codecov_token }}
          fail_ci_if_error: false

      - name: Upload test counts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: counts-${{ runner.os }}-${{ matrix.sdk }}
          path: artifacts/Counts/*.json
